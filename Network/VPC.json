{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template sets up a VPC with 2 public and 2 private subnets. The public subnets contain a NAT gateway each.",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": { "default": "General Configurations" },
          "Parameters": ["Project", "Environment", "VPCCIDR"]
        },
        {
          "Label": { "default": "Public Subnets' Configurations" },
          "Parameters": ["PublicSubnetCIDR1", "PublicSubnetCIDR2"]
        },
        {
          "Label": { "default": "Private Subnets' Configurations" },
          "Parameters": ["PrivateSubnetCIDR1", "PrivateSubnetCIDR2"]
        }
      ],
      "ParameterLabels": {
        "VPCCIDR": { "default": "CIDR block of VPC" },
        "PublicSubnetCIDR1": { "default": "CIDR block of Public Subnet 1" },
        "PublicSubnetCIDR2": { "default": "CIDR block of Public Subnet 2" },
        "PrivateSubnetCIDR1": { "default": "CIDR block of Private Subnet 1" },
        "PrivateSubnetCIDR2": { "default": "CIDR block of Private Subnet 2" }
      }
    }
  },
  "Parameters": {
    "Project": {
      "Type": "String",
      "Default": "MyProject",
      "Description": "Enter a project name"
    },
    "Environment": {
      "Type": "String",
      "Default": "Development",
      "Description": "Describe the environment (e.g. development, production)"
    },
    "VPCCIDR": {
      "Type": "String",
      "Default": "10.0.0.0/16",
      "Description": "Enter the CIDR block for the VPC"
    },
    "PublicSubnetCIDR1": {
      "Type": "String",
      "Default": "10.0.0.0/25",
      "Description": "Enter the CIDR block for the first public subnet"
    },
    "PublicSubnetCIDR2": {
      "Type": "String",
      "Default": "10.0.0.128/25",
      "Description": "Enter the CIDR block for the second public subnet"
    },
    "PrivateSubnetCIDR1": {
      "Type": "String",
      "Default": "10.0.1.0/25",
      "Description": "Enter the CIDR block for the first private subnet"
    },
    "PrivateSubnetCIDR2": {
      "Type": "String",
      "Default": "10.0.1.128/25",
      "Description": "Enter the CIDR block for the second private subnet"
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": { "Ref": "VPCCIDR" },
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": ["-", [{ "Ref": "Project" }, "VPC"]] }
          },
          { "Key": "Environment", "Value": { "Ref": "Environment" } }
        ]
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "CidrBlock": { "Ref": "PublicSubnetCIDR1" },
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": ["-", [{ "Ref": "Project" }, "PublicSubnet1"]]
            }
          },
          { "Key": "Environment", "Value": { "Ref": "Environment" } },
          { "Key": "Subnet", "Value": "Public" }
        ]
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "CidrBlock": { "Ref": "PublicSubnetCIDR2" },
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": ["-", [{ "Ref": "Project" }, "PublicSubnet2"]]
            }
          },
          { "Key": "Environment", "Value": { "Ref": "Environment" } },
          { "Key": "Subnet", "Value": "Public" }
        ]
      }
    },
    "PrivateSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "CidrBlock": { "Ref": "PrivateSubnetCIDR1" },
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": ["-", [{ "Ref": "Project" }, "PrivateSubnet1"]]
            }
          },
          { "Key": "Environment", "Value": { "Ref": "Environment" } },
          { "Key": "Subnet", "Value": "Private" }
        ]
      }
    },
    "PrivateSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "CidrBlock": { "Ref": "PrivateSubnetCIDR2" },
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": ["-", [{ "Ref": "Project" }, "PrivateSubnet2"]]
            }
          },
          { "Key": "Environment", "Value": { "Ref": "Environment" } },
          { "Key": "Subnet", "Value": "Private" }
        ]
      }
    },
    "BasicSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow SSH and Ping",
        "VpcId": { "Ref": "VPC" },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 22,
            "ToPort": 22,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 0,
            "ToPort": 65535,
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": ["-", [{ "Ref": "Project" }, "IGW"]] }
          },
          { "Key": "Environment", "Value": { "Ref": "Environment" } }
        ]
      }
    },
    "InternetGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": { "Ref": "InternetGateway" },
        "VpcId": { "Ref": "VPC" }
      }
    },
    "NATEIP1": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": ["-", [{ "Ref": "Project" }, "EIP1"]] }
          },
          { "Key": "Environment", "Value": { "Ref": "Environment" } }
        ]
      }
    },
    "NATGateway1": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": { "Fn::GetAtt": ["NATEIP1", "AllocationId"] },
        "SubnetId": { "Ref": "PublicSubnet1" },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": ["-", [{ "Ref": "Project" }, "NGW1"]] }
          },
          { "Key": "Environment", "Value": { "Ref": "Environment" } }
        ]
      }
    },
    "NATEIP2": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": ["-", [{ "Ref": "Project" }, "EIP2"]] }
          },
          { "Key": "Environment", "Value": { "Ref": "Environment" } }
        ]
      }
    },
    "NATGateway2": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": { "Fn::GetAtt": ["NATEIP2", "AllocationId"] },
        "SubnetId": { "Ref": "PublicSubnet2" },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": ["-", [{ "Ref": "Project" }, "NGW2"]] }
          },
          { "Key": "Environment", "Value": { "Ref": "Environment" } }
        ]
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": ["-", [{ "Ref": "Project" }, "PublicRouteTable"]]
            }
          },
          { "Key": "Environment", "Value": { "Ref": "Environment" } }
        ]
      }
    },
    "PublicRouteTableRoute1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "PublicRouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "InternetGateway" }
      }
    },
    "PublicSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": { "Ref": "PublicRouteTable" },
        "SubnetId": { "Ref": "PublicSubnet1" }
      }
    },
    "PublicSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": { "Ref": "PublicRouteTable" },
        "SubnetId": { "Ref": "PublicSubnet2" }
      }
    },
    "PrivateRouteTable1": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": ["-", [{ "Ref": "Project" }, "PrivateRouteTable1"]]
            }
          },
          { "Key": "Environment", "Value": { "Ref": "Environment" } }
        ]
      }
    },
    "PrivateRouteTable1Route1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "PrivateRouteTable1" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": { "Ref": "NATGateway1" }
      }
    },
    "PrivateRouteTable2": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": ["-", [{ "Ref": "Project" }, "PrivateRouteTable2"]]
            }
          },
          { "Key": "Environment", "Value": { "Ref": "Environment" } }
        ]
      }
    },
    "PrivateRouteTable2Route1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "PrivateRouteTable2" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": { "Ref": "NATGateway2" }
      }
    },
    "PrivateSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": { "Ref": "PrivateRouteTable1" },
        "SubnetId": { "Ref": "PrivateSubnet1" }
      }
    },
    "PrivateSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": { "Ref": "PrivateRouteTable2" },
        "SubnetId": { "Ref": "PrivateSubnet2" }
      }
    }
  },
  "Outputs": {
    "VpcId": { "Value": { "Ref": "VPC" } },
    "PublicSubnet1Id": { "Value": { "Ref": "PublicSubnet1" } },
    "PublicSubnet2Id": { "Value": { "Ref": "PublicSubnet2" } },
    "PrivateSubnet1Id": { "Value": { "Ref": "PrivateSubnet1" } },
    "PrivateSubnet2Id": { "Value": { "Ref": "PrivateSubnet2" } }
  }
}
