{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Creates an EKS cluster with a managed node group",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": { "default": "EKS Configurations" },
          "Parameters": ["Project", "Environment", "VPC", "EKSNodesSubnets"]
        },
        {
          "Label": { "default": "Bastion Host Configurations" },
          "Parameters": [
            "BastionHostImage",
            "BastionHostKeyPair",
            "BastionHostSubnet"
          ]
        }
      ],
      "ParameterLabels": {
        "EKSNodesSubnets": { "default": "Subnets of EKS Nodes" },
        "BastionHostImage": { "default": "Machine Image" },
        "BastionHostKeyPair": { "default": "Key Pair" },
        "BastionHostSubnet": { "default": "Public Subnet" }
      }
    }
  },
  "Parameters": {
    "Project": {
      "Type": "String",
      "Default": "MyProject",
      "Description": "Enter a project name (will be used as the EKS Cluster name too)"
    },
    "Environment": {
      "Type": "String",
      "Default": "Development",
      "Description": "Describe the environment (e.g. development, production)"
    },
    "VPC": {
      "Type": "AWS::EC2::VPC::Id",
      "Description": "Select the VPC, which is hosting the EKS cluster and bastion host"
    },
    "EKSNodesSubnets": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Description": "Select 2 PRIVATE subnets for the EKS nodes"
    },
    "BastionHostImage": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2",
      "Description": "Recommended to stick with the default value, which is the latest (or second latest) Amazon Linux 2 AMI"
    },
    "BastionHostKeyPair": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "Select the key pair for the EKS bastion host"
    },
    "BastionHostSubnet": {
      "Type": "AWS::EC2::Subnet::Id",
      "Description": "Select a PUBLIC subnet for the EKS bastion host"
    }
  },
  "Resources": {
    "EKSClusterServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["eks.amazonaws.com"]
              },
              "Action": ["sts:AssumeRole"]
            }
          ]
        },
        "ManagedPolicyArns": ["arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"]
      }
    },
    "EKSNodeServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["ec2.amazonaws.com"]
              },
              "Action": ["sts:AssumeRole"]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "EKSNodeServiceRolePolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ecr:GetAuthorizationToken",
                    "ecr:BatchCheckLayerAvailability",
                    "ecr:GetDownloadUrlForLayer",
                    "ecr:GetRepositoryPolicy",
                    "ecr:DescribeRepositories",
                    "ecr:ListImages",
                    "ecr:BatchGetImage"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
        ]
      }
    },
    "BastionHostSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow SSH and Ping",
        "VpcId": { "Ref": "VPC" },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 22,
            "ToPort": 22,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 0,
            "ToPort": 65535,
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": ["-", [{ "Ref": "Project" }, "EKSBastionHostSG"]]
            }
          },
          { "Key": "Environment", "Value": { "Ref": "Environment" } }
        ]
      }
    },
    "EKSCluster": {
      "Type": "AWS::EKS::Cluster",
      "Properties": {
        "Name": { "Ref": "Project" },
        "Version": "1.21",
        "RoleArn": { "Fn::GetAtt": "EKSClusterServiceRole.Arn" },
        "ResourcesVpcConfig": {
          "SubnetIds": { "Ref": "EKSNodesSubnets" },
          "EndpointPublicAccess": false,
          "EndpointPrivateAccess": true,
          "PublicAccessCidrs": ["1.1.1.2/32"]
        },
        "Logging": {
          "ClusterLogging": {
            "EnabledTypes": [
              {
                "Type": "api"
              },
              {
                "Type": "audit"
              }
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": ["-", [{ "Ref": "Project" }, "EKSCluster"]] }
          },
          { "Key": "Environment", "Value": { "Ref": "Environment" } }
        ]
      }
    },
    "EKSNodeLaunchTemplate": {
      "Type": "AWS::EC2::LaunchTemplate",
      "Properties": {
        "LaunchTemplateName": {
          "Fn::Join": ["-", [{ "Ref": "EKSCluster" }, "EKSNodes-Launch-Template"]]
        },
        "LaunchTemplateData": {
          "BlockDeviceMappings": [
            {
              "Ebs": {
                "VolumeSize": "15",
                "VolumeType": "gp2",
                "DeleteOnTermination": true
              },
              "DeviceName": "/dev/xvda"
            }
          ],
          "InstanceType": "t3.medium",
          "TagSpecifications": [
            {
              "ResourceType": "instance",
              "Tags": [
                {
                  "Key": "Name",
                  "Value": {
                    "Fn::Join": ["-", [{ "Ref": "Project" }, "EKSNodes"]]
                  }
                },
                { "Key": "Environment", "Value": { "Ref": "Environment" } }
              ]
            },
            {
              "ResourceType": "volume",
              "Tags": [
                {
                  "Key": "Name",
                  "Value": {
                    "Fn::Join": ["-", [{ "Ref": "Project" }, "EKSNodes"]]
                  }
                },
                { "Key": "Environment", "Value": { "Ref": "Environment" } }
              ]
            },
            {
              "ResourceType": "network-interface",
              "Tags": [
                {
                  "Key": "Name",
                  "Value": {
                    "Fn::Join": ["-", [{ "Ref": "Project" }, "EKSNodes"]]
                  }
                },
                { "Key": "Environment", "Value": { "Ref": "Environment" } }
              ]
            }
          ]
        }
      }
    },
    "EKSNodeGroup": {
      "Type": "AWS::EKS::Nodegroup",
      "Properties": {
        "AmiType": "AL2_x86_64",
        "ClusterName": { "Ref": "EKSCluster" },
        "NodeRole": { "Fn::GetAtt": "EKSNodeServiceRole.Arn" },
        "ScalingConfig": {
          "MinSize": 0,
          "DesiredSize": 2,
          "MaxSize": 3
        },
        "LaunchTemplate": {
          "Id" : { "Ref": "EKSNodeLaunchTemplate" }
        },
        "Labels": {
          "Type": "EC2NodeGroup"
        },
        "Subnets": { "Ref": "EKSNodesSubnets" }
      }
    },
    "EKSBastionHost": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": { "Ref": "BastionHostImage" },
        "InstanceType": "t3.micro",
        "KeyName": { "Ref": "BastionHostKeyPair" },
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0",
            "GroupSet": [
              { "Fn::GetAtt": "EKSCluster.ClusterSecurityGroupId" },
              { "Ref": "BastionHostSecurityGroup" }
            ],
            "SubnetId": { "Ref": "BastionHostSubnet" }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": ["-", [{ "Ref": "Project" }, "EKSBastionHost"]]
            }
          },
          { "Key": "Environment", "Value": { "Ref": "Environment" } }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                "#!/bin/bash",
                "sudo yum update -y",
                "sudo yum install git -y",
                "curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\"",
                "unzip awscliv2.zip",
                "sudo ./aws/install",
                "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"",
                "sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl",
                "curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3",
                "chmod 700 get_helm.sh",
                "./get_helm.sh",
                "curl --silent --location \"https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz\" | tar xz -C /tmp",
                "sudo mv /tmp/eksctl /usr/local/bin",
                "sudo yum install jq -y"
              ]
            ]
          }
        }
      }
    }
  },
  "Outputs": {
    "EKSBastionHostPublicIP": {
      "Value": { "Fn::GetAtt": "EKSBastionHost.PublicIp" }
    },
    "EKSClusterDefaultSecurityGroupId": {
      "Value": { "Fn::GetAtt": "EKSCluster.ClusterSecurityGroupId" }
    }
  }
}
